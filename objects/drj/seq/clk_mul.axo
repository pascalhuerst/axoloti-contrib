<objdefs appVersion="1.0.10">
  <obj.normal id="clk_mul" uuid="1413af5343f97123abeeb627811120af4b3a4793">
    <sDescription>Clock multiplier</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <bool32.rising  name="clk" description="Clock input"/>
    </inlets>
    <outlets>
      <bool32.pulse   name="clk" description="Clock output"/>
      <int32          name="period" description="Period"/>
    </outlets>
    <displays/>
    <params>
      <int32 name="clockmul" noLabel="false">
         <MinValue i="1"/>
         <MaxValue i="128"/>
      </int32>
    </params>
    <attribs/>
    <code.declaration><![CDATA[

      uint32_t  ktimer;
      uint32_t  last_ktime;
      uint32_t  period;
      uint32_t  last_period;
      uint32_t  remaining_clocks;
      uint32_t  old_clk;

    ]]></code.declaration>
    <code.init><![CDATA[

      ktimer           = 0;
      last_ktime       = ktimer;
      period           = 1;
      last_period      = period;
      remaining_clocks = 0;
      old_clk          = 0;

    ]]></code.init>
    <code.krate><![CDATA[

      outlet_clk = 0;

      if( inlet_clk && !old_clk )
        {
          float tmp_period = (ktimer - last_ktime);
          period           = (int32_t) ((tmp_period / param_clockmul) + 0.5f);
          if( period < 2 )
            {
              period = 2;
            }
          last_ktime        = ktimer;
          last_period       = period;
          remaining_clocks  = param_clockmul - 1;
          outlet_clk        = 1;
        }
      else if( remaining_clocks > 0 && --period == 0 )
        {
          remaining_clocks--;
          period     = last_period;
          outlet_clk = 1;
        }

      outlet_period = last_period;
      old_clk       = inlet_clk;
      ktimer++;

    ]]></code.krate>
  </obj.normal>
</objdefs>
